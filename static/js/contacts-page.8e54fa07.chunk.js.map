{"version":3,"file":"static/js/contacts-page.8e54fa07.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/contacts-page/styles.module.css?a780","webpack://goit-react-hw-08-phonebook/./src/components/Form/styles.module.css?5f34","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/styles.module.css?d946","components/Contacts/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/styles.module.css?0bf3","components/Filter/Filter.jsx","pages/contacts-page/contactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__xMELL\",\"icon\":\"styles_icon__scjor\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"styles_label__zolhw\",\"input\":\"styles_input__OaQvx\",\"form\":\"styles_form__ekyuM\",\"submitButton\":\"styles_submitButton__utG3H\",\"icon\":\"styles_icon__B6WtL\"};","import { useState, useEffect } from 'react';\n\nimport { TiUserAddOutline } from 'react-icons/ti';\nimport { toast } from 'react-toastify';\nimport styles from './styles.module.css';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'Redux/contacts/contactsApi';\n\nconst Form = () => {\n  const [createContact] = useCreateContactMutation();\n  const { data } = useGetContactsQuery();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  useEffect(() => {\n    name.length > 0 && number.length > 0\n      ? setIsDisabled(false)\n      : setIsDisabled(true);\n  }, [name, number]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n\n    const contactFinder = data.find(\n      contact => contact.name === name || contact.number === number\n    );\n\n    if (contactFinder) {\n      toast.warn(`${name} ${number} is already in contacts.`, {\n        theme: 'dark',\n      });\n      return;\n    }\n\n    createContact(contact);\n\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name:\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"john doe\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={e => setName(e.currentTarget.value)}\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number:\n        <input\n          className={styles.input}\n          type=\"tel\"\n          placeholder=\"+380 33 333 3333\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          name=\"number\"\n          onChange={e => setNumber(e.currentTarget.value)}\n          required\n        />\n      </label>\n\n      <button\n        className={styles.submitButton}\n        type=\"submit\"\n        disabled={isDisabled}\n      >\n        add contact\n        <TiUserAddOutline size={20} className={styles.icon} />\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"styles_contactsList__Ev7tc\",\"phoneNumber\":\"styles_phoneNumber__9Ub5M\",\"contactName\":\"styles_contactName__qTuby\",\"listItem\":\"styles_listItem__U7r0n\",\"buttons\":\"styles_buttons__YXtnx\"};","import styles from './styles.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'Redux/contacts/contactsSlice';\nimport { SpinnerInfinity } from 'spinners-react';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'Redux/contacts/contactsApi';\n\nconst Contacts = () => {\n  const { data, isFetching } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = () => {\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  };\n  let rendered = filter === '' ? data : filteredContacts();\n\n  return (\n    <>\n      <ul className={styles.contactsList}>\n        {data &&\n          rendered.map(({ name, id, number }) => (\n            <li className={styles.listItem} key={id} id={id}>\n              <span className={styles.contactName}>{name}: </span>\n              <span className={styles.phoneNumber}>{number}</span>\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={\n                  <Tooltip id=\"button-tooltip-2\">Click to delete</Tooltip>\n                }\n              >\n                <button\n                  type=\"button\"\n                  className={styles.buttons}\n                  onClick={() => deleteContact(id)}\n                  aria-label=\"delete contact button\"\n                >\n                  <TiUserDeleteOutline size={20} />\n                </button>\n              </OverlayTrigger>\n            </li>\n          ))}\n      </ul>\n      {data && data.length === 0 && (\n        <p style={{ textDecoration: 'underline' }}>no contacts available</p>\n      )}\n      {isFetching && <SpinnerInfinity style={{ color: 'white' }} />}\n    </>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__njCtW\",\"text\":\"styles_text__K+7EA\"};","import styles from './styles.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilter } from 'Redux/contacts/contactsSlice';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  return (\n    <div className={styles.wrapper}>\n      <p className={styles.text}>Find contacts by name</p>\n      <OverlayTrigger\n        placement=\"bottom\"\n        overlay={\n          <Tooltip id=\"button-tooltip-2\">Type here to find a contact</Tooltip>\n        }\n      >\n        <input\n          name=\"filter\"\n          value={filter}\n          onChange={e => dispatch(setFilter(e.currentTarget.value))}\n        />\n      </OverlayTrigger>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styles from './styles.module.css';\nimport { BsJournalBookmark } from 'react-icons/bs';\nimport Form from 'components/Form';\nimport Contacts from 'components/Contacts';\nimport Filter from 'components/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div className={styles.wrapper}>\n      <section>\n        <h1>\n          Phonebook <BsJournalBookmark size={35} className={styles.icon} />\n        </h1>\n        <Form />\n      </section>\n      <section>\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["useCreateContactMutation","createContact","data","useGetContactsQuery","useState","name","setName","number","setNumber","isDisabled","setIsDisabled","useEffect","length","onSubmit","e","preventDefault","contact","contactFinder","find","toast","theme","className","styles","type","placeholder","pattern","title","value","onChange","currentTarget","required","disabled","size","isFetching","useDeleteContactMutation","deleteContact","filter","useSelector","getFilter","rendered","toLowerCase","includes","trim","map","id","OverlayTrigger","placement","overlay","Tooltip","onClick","style","textDecoration","SpinnerInfinity","color","dispatch","useDispatch","setFilter"],"sourceRoot":""}