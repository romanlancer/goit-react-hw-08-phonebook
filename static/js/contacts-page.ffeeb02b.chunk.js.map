{"version":3,"file":"static/js/contacts-page.ffeeb02b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/contacts-page/styles.module.css?a780","webpack://goit-react-hw-08-phonebook/./src/components/Form/styles.module.css?5f34","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/styles.module.css?d946","components/Contacts/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/styles.module.css?0bf3","components/Filter/Filter.jsx","components/LoadingScreen/LoadingScreen.jsx","pages/contacts-page/contactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__xMELL\",\"icon\":\"styles_icon__scjor\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"styles_label__zolhw\",\"input\":\"styles_input__OaQvx\",\"form\":\"styles_form__ekyuM\",\"submitButton\":\"styles_submitButton__utG3H\",\"icon\":\"styles_icon__B6WtL\"};","import { useState, useEffect } from 'react';\nimport addSound from 'assets/add-sound.mp3';\nimport errorSound from 'assets/error-sound.mp3';\nimport Player from 'components/Player';\nimport { TiUserAddOutline, TiWarning } from 'react-icons/ti';\nimport { toast } from 'react-toastify';\nimport styles from './styles.module.css';\nimport {\n  useCreateContactMutation,\n  useGetContactsQuery,\n} from 'Redux/contacts/contactsApi';\n\nconst Form = () => {\n  const [createContact] = useCreateContactMutation();\n  const { data } = useGetContactsQuery();\n  const audio = new Audio(addSound);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  useEffect(() => {\n    name.length > 0 && number.length > 0\n      ? setIsDisabled(false)\n      : setIsDisabled(true);\n  }, [name, number]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n\n    const contactFinder = data.find(\n      contact => contact.name === name || contact.number === number\n    );\n\n    if (contactFinder) {\n      toast.warn(`${name} ${number} is already in contacts.`, {\n        icon: () => (\n          <>\n            <TiWarning size={30} color=\"var(--toastify-color-warning)\" />\n            <Player url={errorSound} />\n          </>\n        ),\n      });\n      audio.pause();\n      return;\n    }\n\n    createContact(contact);\n\n    reset();\n  };\n\n  const startPlaying = () => {\n    audio.play();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <label className={styles.label}>\n        Name:\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"john doe\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={e => setName(e.currentTarget.value)}\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number:\n        <input\n          className={styles.input}\n          type=\"tel\"\n          placeholder=\"+380 33 333 3333\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          name=\"number\"\n          onChange={e => setNumber(e.currentTarget.value)}\n          required\n        />\n      </label>\n\n      <button\n        onClick={startPlaying}\n        className={styles.submitButton}\n        type=\"submit\"\n        disabled={isDisabled}\n      >\n        add contact\n        <TiUserAddOutline size={20} className={styles.icon} />\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"styles_contactsList__Ev7tc\",\"phoneNumber\":\"styles_phoneNumber__9Ub5M\",\"contactName\":\"styles_contactName__qTuby\",\"listItem\":\"styles_listItem__U7r0n\",\"buttons\":\"styles_buttons__YXtnx\"};","import styles from './styles.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'Redux/contacts/contactsSlice';\nimport { SpinnerInfinity } from 'spinners-react';\nimport deleteSound from 'assets/delete-sound.mp3';\n\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'Redux/contacts/contactsApi';\nimport { useEffect } from 'react';\n\nconst Contacts = () => {\n  const audio = new Audio(deleteSound);\n  const { data, isFetching, refetch } = useGetContactsQuery();\n\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = () => {\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n  };\n\n  useEffect(() => {\n    refetch();\n  }, [refetch]);\n  let rendered = filter === '' ? data : filteredContacts();\n\n  const startPlaying = () => {\n    audio.play();\n  };\n\n  return (\n    <>\n      <ul className={styles.contactsList}>\n        {data &&\n          rendered.map(({ name, id, number }) => (\n            <li className={styles.listItem} key={id} id={id}>\n              <span className={styles.contactName}>{name}: </span>\n              <span className={styles.phoneNumber}>{number}</span>\n              <OverlayTrigger\n                placement=\"bottom\"\n                overlay={\n                  <Tooltip id=\"button-tooltip-2\">Click to delete</Tooltip>\n                }\n              >\n                <button\n                  type=\"button\"\n                  className={styles.buttons}\n                  onClick={() => {\n                    deleteContact(id);\n                    startPlaying();\n                  }}\n                  aria-label=\"delete contact button\"\n                >\n                  <TiUserDeleteOutline size={20} />\n                </button>\n              </OverlayTrigger>\n            </li>\n          ))}\n      </ul>\n      {data && data.length === 0 && (\n        <p style={{ textDecoration: 'underline' }}>no contacts available</p>\n      )}\n      {isFetching && <SpinnerInfinity style={{ color: 'white' }} />}\n    </>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__njCtW\",\"text\":\"styles_text__K+7EA\"};","import styles from './styles.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter, getFilter } from 'Redux/contacts/contactsSlice';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  return (\n    <div className={styles.wrapper}>\n      <p className={styles.text}>Find contacts by name</p>\n      <OverlayTrigger\n        placement=\"bottom\"\n        overlay={\n          <Tooltip id=\"filter input tooltip\">\n            Type here to find a contact\n          </Tooltip>\n        }\n      >\n        <input\n          name=\"filter\"\n          value={filter}\n          onChange={e => dispatch(setFilter(e.currentTarget.value))}\n        />\n      </OverlayTrigger>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { SpinnerDotted } from 'spinners-react';\nimport { FaRegHandshake } from 'react-icons/fa';\n\nconst LoadingScreen = () => {\n  return (\n    <div className=\"position-absolute top-50 start-50 translate-middle \">\n      <div className=\"d-flex align-items-center mb-4\">\n        <strong className=\"fs-2\">\n          Welcome <FaRegHandshake size={50} color={'black'} /> to Contacts app.\n          Now loading...\n        </strong>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        {' '}\n        <SpinnerDotted size={120} color={'black'} speed={150} />\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingScreen;\n","import styles from './styles.module.css';\nimport { BsJournalBookmark } from 'react-icons/bs';\nimport Form from 'components/Form';\nimport Contacts from 'components/Contacts';\nimport Filter from 'components/Filter';\nimport { useSelector } from 'react-redux';\nimport authSelectors from 'Redux/auth/auth-selectors';\nimport authOperations from 'Redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport LoadingScreen from 'components/LoadingScreen';\nimport { useEffect } from 'react';\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  const isFetchingCurrentUser = useSelector(\n    authSelectors.getIsFetchingCurrentUser\n  );\n  if (isFetchingCurrentUser) return <LoadingScreen />;\n\n  return (\n    <div className={styles.wrapper}>\n      <section>\n        <h1>\n          Phonebook <BsJournalBookmark size={35} className={styles.icon} />\n        </h1>\n        <Form />\n      </section>\n      <section>\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["useCreateContactMutation","createContact","data","useGetContactsQuery","audio","Audio","addSound","useState","name","setName","number","setNumber","isDisabled","setIsDisabled","useEffect","length","onSubmit","e","preventDefault","contact","contactFinder","find","toast","icon","size","color","Player","url","errorSound","pause","className","styles","type","placeholder","pattern","title","value","onChange","currentTarget","required","onClick","play","disabled","deleteSound","isFetching","refetch","useDeleteContactMutation","deleteContact","filter","useSelector","getFilter","rendered","toLowerCase","includes","trim","map","id","OverlayTrigger","placement","overlay","Tooltip","style","textDecoration","SpinnerInfinity","dispatch","useDispatch","setFilter","SpinnerDotted","speed","authOperations","authSelectors"],"sourceRoot":""}