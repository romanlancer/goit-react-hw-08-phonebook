{"version":3,"file":"static/js/register-page.386c01de.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/register-page/styles.module.css?8882","pages/register-page/register-page.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__ndyUs\",\"submitButton\":\"styles_submitButton__gWVyR\",\"section\":\"styles_section__+qYIn\",\"form\":\"styles_form__ixE8U\",\"instructions\":\"styles_instructions__hh6C4\",\"offscreen\":\"styles_offscreen__vQ44z\",\"hide\":\"styles_hide__Ydv9c\",\"valid\":\"styles_valid__66Lon\",\"invalid\":\"styles_invalid__YmorP\",\"errmsg\":\"styles_errmsg__LwFf1\",\"line\":\"styles_line__R3Pkt\"};","import { useRef, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'Redux/auth/auth-operations';\nimport styles from './styles.module.css';\nimport { NavLink } from 'react-router-dom';\n\nimport {\n  faCheck,\n  faTimes,\n  faInfoCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst USER_REGEX = /^[A-z][A-z0-9-_-\\s?]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst EMAIL_REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nconst Register = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n  const dispatch = useDispatch();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  const [errMsg, setErrMsg] = useState('');\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    setValidName(USER_REGEX.test(user));\n  }, [user]);\n\n  useEffect(() => {\n    setValidEmail(EMAIL_REGEX.test(email));\n  }, [email]);\n\n  useEffect(() => {\n    setValidPwd(PWD_REGEX.test(pwd));\n    setValidMatch(pwd === matchPwd);\n  }, [pwd, matchPwd]);\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // if button enabled with JS hack\n    const v1 = USER_REGEX.test(user);\n    const v2 = PWD_REGEX.test(pwd);\n    const v3 = EMAIL_REGEX.test(email);\n    if (!v1 || !v2 || !v3) {\n      setErrMsg('Invalid Entry');\n      return;\n    }\n\n    dispatch(authOperations.register({ name: user, password: pwd, email }));\n    setEmail('');\n    setUser('');\n    setPwd('');\n    setMatchPwd('');\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <section className={styles.section}>\n        <p\n          ref={errRef}\n          className={errMsg ? `${styles.errmsg}` : `${styles.offscreen}`}\n          aria-live=\"assertive\"\n        >\n          {errMsg}\n        </p>\n        <h1>Register</h1>\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <label htmlFor=\"username\">\n            Username:\n            <FontAwesomeIcon\n              icon={faCheck}\n              className={validName ? `${styles.valid}` : `${styles.hide}`}\n            />\n            <FontAwesomeIcon\n              icon={faTimes}\n              className={\n                validName || !user ? `${styles.hide}` : `${styles.invalid}`\n              }\n            />\n          </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            ref={userRef}\n            autoComplete=\"off\"\n            onChange={e => setUser(e.target.value)}\n            value={user}\n            required\n            aria-invalid={validName ? 'false' : 'true'}\n            aria-describedby=\"uidnote\"\n            onFocus={() => setUserFocus(true)}\n            onBlur={() => setUserFocus(false)}\n          />\n          <p\n            id=\"uidnote\"\n            className={\n              userFocus && user && !validName\n                ? `${styles.instructions}`\n                : `${styles.offscreen}`\n            }\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n            4 to 24 characters.\n            <br />\n            Must begin with a letter.\n            <br />\n            Letters, numbers, underscores, hyphens allowed.\n          </p>\n\n          <label htmlFor=\"email\">\n            Email:\n            <FontAwesomeIcon\n              icon={faCheck}\n              className={validEmail ? `${styles.valid}` : `${styles.hide}`}\n            />\n            <FontAwesomeIcon\n              icon={faTimes}\n              className={\n                validEmail || !email ? `${styles.hide}` : `${styles.invalid}`\n              }\n            />\n          </label>\n\n          <input\n            type=\"email\"\n            id=\"email\"\n            ref={userRef}\n            onChange={e => setEmail(e.target.value)}\n            value={email}\n            required\n            aria-invalid={validEmail ? 'false' : 'true'}\n            aria-describedby=\"emailnote\"\n            onFocus={() => setEmailFocus(true)}\n            onBlur={() => setEmailFocus(false)}\n          />\n          <p\n            id=\"emailnote\"\n            className={\n              emailFocus && email && !validEmail\n                ? `${styles.instructions}`\n                : `${styles.offscreen}`\n            }\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n            An email is a string separated into two parts by @ symbol. a\n            \"personal_info\" and a domain, that is personal_info@domain Letters,\n            numbers, underscores, hyphens allowed.\n            <br />\n            The domain name [for example com, org, net, in, us, info] part\n            contains letters, digits, hyphens, and dots.\n          </p>\n\n          <label htmlFor=\"password\">\n            Password:\n            <FontAwesomeIcon\n              icon={faCheck}\n              className={validPwd ? `${styles.valid}` : `${styles.hide}`}\n            />\n            <FontAwesomeIcon\n              icon={faTimes}\n              className={\n                validPwd || !pwd ? `${styles.hide}` : `${styles.invalid}`\n              }\n            />\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            onChange={e => setPwd(e.target.value)}\n            value={pwd}\n            required\n            aria-invalid={validPwd ? 'false' : 'true'}\n            aria-describedby=\"pwdnote\"\n            onFocus={() => setPwdFocus(true)}\n            onBlur={() => setPwdFocus(false)}\n          />\n          <p\n            id=\"pwdnote\"\n            className={\n              pwdFocus && !validPwd\n                ? `${styles.instructions}`\n                : `${styles.offscreen}`\n            }\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n            8 to 24 characters.\n            <br />\n            Must include uppercase and lowercase letters, a number and a special\n            character.\n            <br />\n            Allowed special characters:{' '}\n            <span aria-label=\"exclamation mark\">!</span>{' '}\n            <span aria-label=\"at symbol\">@</span>{' '}\n            <span aria-label=\"hashtag\">#</span>{' '}\n            <span aria-label=\"dollar sign\">$</span>{' '}\n            <span aria-label=\"percent\">%</span>\n          </p>\n\n          <label htmlFor=\"confirm_pwd\">\n            Confirm Password:\n            <FontAwesomeIcon\n              icon={faCheck}\n              className={\n                validMatch && matchPwd ? `${styles.valid}` : `${styles.hide}`\n              }\n            />\n            <FontAwesomeIcon\n              icon={faTimes}\n              className={\n                validMatch || !matchPwd ? `${styles.hide}` : `${styles.invalid}`\n              }\n            />\n          </label>\n          <input\n            type=\"password\"\n            id=\"confirm_pwd\"\n            onChange={e => setMatchPwd(e.target.value)}\n            value={matchPwd}\n            required\n            aria-invalid={validMatch ? 'false' : 'true'}\n            aria-describedby=\"confirmnote\"\n            onFocus={() => setMatchFocus(true)}\n            onBlur={() => setMatchFocus(false)}\n          />\n          <p\n            id=\"confirmnote\"\n            className={\n              matchFocus && !validMatch\n                ? `${styles.instructions}`\n                : `${styles.offscreen}`\n            }\n          >\n            <FontAwesomeIcon icon={faInfoCircle} />\n            Must match the first password input field.\n          </p>\n\n          <button\n            className={styles.submitButton}\n            disabled={!validName || !validPwd || !validMatch ? true : false}\n          >\n            Sign Up\n          </button>\n        </form>\n        <p>\n          Already registered?\n          <br />\n          <NavLink className={styles.line} to={'/LogIn'}>\n            Sign In\n          </NavLink>\n        </p>\n      </section>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["USER_REGEX","PWD_REGEX","EMAIL_REGEX","userRef","useRef","errRef","dispatch","useDispatch","useState","user","setUser","validName","setValidName","userFocus","setUserFocus","email","setEmail","validEmail","setValidEmail","emailFocus","setEmailFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","useEffect","current","focus","test","className","styles","ref","onSubmit","e","preventDefault","v1","v2","v3","authOperations","name","password","htmlFor","icon","faCheck","faTimes","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","faInfoCircle","disabled","to"],"sourceRoot":""}