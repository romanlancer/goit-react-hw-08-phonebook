{"version":3,"file":"static/js/login-page.c275e35c.chunk.js","mappings":"gNACA,EAA0B,wBAA1B,EAA4D,wBAA5D,EAA2F,qBAA3F,EAA+H,6BAA/H,EAA2K,6BAA3K,EAAgQ,0BAAhQ,EAA+X,uBAA/X,EAA6Z,qBAA7Z,EAAuc,mCAAvc,EAAqf,0D,+EC0Grf,EAlGc,WACZ,IAAMA,GAAUC,EAAAA,EAAAA,UACVC,GAASD,EAAAA,EAAAA,UACTE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsBF,EAAAA,EAAAA,UAAS,IAA/B,eAAOG,EAAP,KAAYC,EAAZ,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA0CN,EAAAA,EAAAA,WAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,MAMAC,EAAAA,EAAAA,YAAU,WACRd,EAAQe,QAAQC,UACf,KAEHF,EAAAA,EAAAA,YAAU,WACRH,EAAU,MACT,CAACL,EAAOE,IASX,OACE,gBAAKS,UAAWC,EAAhB,UACE,qBAASD,UAAWC,EAApB,WACE,cACEC,IAAKjB,EACLe,UAAiB,UAANP,EAAYQ,EAAqBA,GAC5C,YAAU,YAHZ,SAKGR,KAEH,qCACA,kBAAMU,SAlBS,SAAAC,GACnBA,EAAEC,iBACFnB,EAASoB,EAAAA,EAAAA,MAAqB,CAAEjB,MAAAA,EAAOkB,SAAUhB,KACjDD,EAAS,IACTE,EAAO,KAc2BQ,UAAWC,EAAzC,WACE,kBAAOO,QAAQ,QAAf,qBACA,iBAAKR,UAAWC,EAAhB,UACG,KACD,kBACEQ,aAAa,MACbC,KAAK,QACLC,GAAG,QACHT,IAAKnB,EACL6B,SAAU,SAAAR,GAAC,OAAId,EAASc,EAAES,OAAOC,QACjCA,MAAOzB,EACP0B,UAAQ,KAEV,gBAAKf,UAAWC,EAAhB,UACE,SAAC,MAAD,CACEe,KAAM,GACNC,MAAO,CAAEC,IAAK,MAAOC,KAAM,MAAOC,SAAU,oBAKlD,kBAAOZ,QAAQ,WAAf,wBACA,iBAAKR,UAAWC,EAAhB,WACE,kBACES,KAAMf,EAAgB,OAAS,WAC/BgB,GAAG,WACHC,SAAU,SAAAR,GAAC,OAAIZ,EAAOY,EAAES,OAAOC,QAC/BA,MAAOvB,EACPwB,UAAQ,KAEV,SAACM,EAAA,EAAD,CACEC,UAAU,MACVC,SACE,SAACC,EAAA,EAAD,CAASb,GAAG,0BAAZ,2BAHJ,UAME,mBACEX,UAAWC,EACXwB,QApES,WACrB7B,GAAkBD,IAoENe,KAAK,SAHP,UAKE,SAAC,MAAD,CAAUM,KAAM,aAItB,mBAAQhB,UAAWC,EAAnB,yBAEF,6CAEE,mBACA,SAAC,KAAD,CAASD,UAAWC,EAAayB,GAAI,UAArC","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/login-page/styles.module.css?a36d","pages/login-page/loginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__+DQeI\",\"section\":\"styles_section__InMZZ\",\"form\":\"styles_form__kDmCY\",\"inputWrapper\":\"styles_inputWrapper__s1WyT\",\"submitButton\":\"styles_submitButton__lkB0H\",\"instructions\":\"styles_instructions__Hctgj\",\"offscreen\":\"styles_offscreen__qDQ+b\",\"hide\":\"styles_hide__sjK6w\",\"valid\":\"styles_valid__6PQqm\",\"invalid\":\"styles_invalid__5ZSuu\",\"errmsg\":\"styles_errmsg__07ey-\",\"line\":\"styles_line__58db0\",\"showPasswordButton\":\"styles_showPasswordButton__OHmKd\",\"infoIcon\":\"styles_infoIcon__YOH0S styles_showPasswordButton__OHmKd\"};","import { useRef, useState, useEffect } from 'react';\nimport styles from './styles.module.css';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport authOperations from 'Redux/auth/auth-operations';\nimport { FaRegEye } from 'react-icons/fa';\nimport { MdOutlineAlternateEmail } from 'react-icons/md';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nconst Login = () => {\n  const userRef = useRef();\n  const errRef = useRef();\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [errMsg, setErrMsg] = useState('');\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePassword = () => {\n    setPasswordShown(!passwordShown);\n  };\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    setErrMsg('');\n  }, [email, pwd]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password: pwd }));\n    setEmail('');\n    setPwd('');\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <section className={styles.section}>\n        <p\n          ref={errRef}\n          className={errMsg ? `${styles.errmsg}` : `${styles.offscreen}`}\n          aria-live=\"assertive\"\n        >\n          {errMsg}\n        </p>\n        <h1>Sign In</h1>\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <label htmlFor=\"email\">Email:</label>\n          <div className={styles.inputWrapper}>\n            {' '}\n            <input\n              autoComplete=\"off\"\n              type=\"email\"\n              id=\"email\"\n              ref={userRef}\n              onChange={e => setEmail(e.target.value)}\n              value={email}\n              required\n            />\n            <div className={styles.infoIcon}>\n              <MdOutlineAlternateEmail\n                size={30}\n                style={{ top: '5px', left: '5px', position: 'absolute' }}\n              />\n            </div>\n          </div>\n\n          <label htmlFor=\"password\">Password:</label>\n          <div className={styles.inputWrapper}>\n            <input\n              type={passwordShown ? 'text' : 'password'}\n              id=\"password\"\n              onChange={e => setPwd(e.target.value)}\n              value={pwd}\n              required\n            />\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={\n                <Tooltip id=\"password button tooltip\">show password</Tooltip>\n              }\n            >\n              <button\n                className={styles.showPasswordButton}\n                onClick={togglePassword}\n                type=\"button\"\n              >\n                <FaRegEye size={30} />\n              </button>\n            </OverlayTrigger>\n          </div>\n          <button className={styles.submitButton}>Sign In</button>\n        </form>\n        <p>\n          Need an Account?\n          <br />\n          <NavLink className={styles.line} to={'/SignUp'}>\n            Sign Up\n          </NavLink>\n        </p>\n      </section>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["userRef","useRef","errRef","dispatch","useDispatch","useState","email","setEmail","pwd","setPwd","errMsg","setErrMsg","passwordShown","setPasswordShown","useEffect","current","focus","className","styles","ref","onSubmit","e","preventDefault","authOperations","password","htmlFor","autoComplete","type","id","onChange","target","value","required","size","style","top","left","position","OverlayTrigger","placement","overlay","Tooltip","onClick","to"],"sourceRoot":""}